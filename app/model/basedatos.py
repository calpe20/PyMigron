from pony.orm import *
from datetime import date, datetime, time
from decimal import Decimal
db = Database()
class Accesos(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	idusuario = PrimaryKey(int, auto=True)
	usuario = Optional(str, 10 )
	grupo = Required(str, 50 )
	acceso = Required(str, 100 )
	page = Required(int)
	nombreboton = Required(str, 20 )
	estado = Optional(int)
	campoadiciona = Required(str, 255 )

class Acompanante(db.Entity):
	id = PrimaryKey(int, auto=True)
	idreserva = Optional(int)
	nombre = Optional(str, 250 )

class Agencias(db.Entity):
	idempresa = Optional(str, 6 )
	idagencia = PrimaryKey(str, 3 )
	nombre = Optional(str, 27 )
	direccion = Optional(str, 200 )
	mensaje = Required(str, 200 )
	responsable = Required(str, 100 )
	validacredito = Required(int)
	actualizacobranza = Required(int)
	cobranzaenlinea = Required(int)
	tienegaveta = Required(int)
	impresora01 = Required(LongStr)
	impresora02 = Required(LongStr)
	impresora03 = Required(LongStr)
	impresora04 = Required(LongStr)
	impresorapdf = Required(LongStr)
	proformaeditable = Required(LongStr)
	boletaeditable = Required(LongStr)
	facturaeditable = Required(LongStr)
	notadecreditoeditable = Required(LongStr)
	etiquetaeditable = Required(LongStr)
	formatoa4 = Required(LongStr)
	formatoa4_proforma = Required(LongStr)
	numcopiafac = Required(int)
	editarcliente = Required(int)
	impresiondirecta = Required(int)
	editarprodventa = Optional(int)
	ventasinstock = Required(int)
	venderbajocosto = Required(int)
	enviosfs = Required(int)
	envionbf = Required(int)
	ruta_nbf = Required(LongStr)
	token = Required(LongStr)
	multialmacen = Optional(int)
	productosunicos = Optional(int)
	verfotos = Optional(int)
	eshospedaje = Optional(int)
	impresoras = Optional(int)
	usa_referencia = Optional(int)
	usa_marca = Optional(int)
	usa_comptatibilidad = Optional(int)
	usa_nom_comercial = Optional(int)
	usa_terapeutico = Optional(int)
	usa_produccion = Optional(int)
	multicajero = Optional(int)
	estado = Optional(str, 1 )
	usa_compatibilidad = Optional(int)
	cajaciega = Optional(int)

class Almacen(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	codigo = PrimaryKey(str, 2 )
	nombre = Required(str, 50 )
	encargado = Required(str, 38 )
	ubicacion = Required(str, 38 )
	capacidad = Optional(Decimal, 20,7 )
	idcombustible = Required(str, 20 )
	combustible = Required(str, 20 )
	estado = Optional(int)

class Aperturas(db.Entity):
	id = PrimaryKey(int, auto=True)
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	dia = Optional(date)
	codigo = Optional(str, 20 )
	stockini = Required(Decimal, 20,5 )
	stockfin = Required(Decimal, 20,5 )
	contometroini = Required(Decimal, 20,5 )
	contometrofin = Required(Decimal, 20,5 )
	ventagalones = Required(Decimal, 20,5 )
	reglaini = Required(Decimal, 20,5 )
	galonesini = Required(Decimal, 20,5 )
	reglafin = Required(Decimal, 20,5 )
	galonesfin = Required(Decimal, 20,5 )
	diferencia = Required(Decimal, 20,5 )
	diferenciatotal = Required(Decimal, 20,5 )
	temperatura = Required(int)
	estado = Required(str, 1 )

class Areas(db.Entity):
	idarea = PrimaryKey(int, auto=True)
	area = Required(str, 50 )
	estado = Required(int)

class Articulo(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	codigo = PrimaryKey(str, 25 )
	nombre = Required(str, 150 )
	descripcioncorta = Required(str, 250 )
	descripcionlarga = Required(str, 250 )
	referencia = Required(str, 50 )
	unidad = Required(str, 3 )
	costo = Required(Decimal, 20,7 )
	precio1 = Required(Decimal, 20,7 )
	precio2 = Required(Decimal, 20,7 )
	precio3 = Required(Decimal, 20,7 )
	precio4 = Required(Decimal, 20,7 )
	existencia = Required(Decimal, 20,7 )
	comprometido = Required(Decimal, 20,7 )
	minimo = Required(Decimal, 20,7 )
	maximo = Required(Decimal, 20,7 )
	costo_ant = Required(Decimal, 20,7 )
	costo_prom = Required(Decimal, 20,7 )
	fechamodifi = Required(datetime)
	categoria = Optional(int)
	idproveedor = Required(str, 20 )
	porcen1 = Required(Decimal, 20,2 )
	porcen2 = Required(Decimal, 20,2 )
	porcen3 = Required(Decimal, 20,2 )
	porcen4 = Required(Decimal, 20,2 )
	servicio = Required(int)
	compuesto = Optional(int)
	lote = Required(int)
	receta = Required(int)
	peso = Required(Decimal, 20,2 )
	reservado = Required(Decimal, 20,2 )
	categoria_old = Required(str, 20 )
	proveedo_old = Required(str, 20 )
	bonificacion = Optional(int)
	foto = Required(LongStr)
	nombrefoto = Required(str, 200 )
	codigoalternativo = Required(str, 25 )
	fraccion = Optional(int)
	cantidadfraccion = Required(Decimal, 20,2 )
	unidadfraccion = Required(str, 3 )
	utilidadmin = Required(Decimal, 20,2 )
	empaque = Required(int)
	icbper = Required(int)
	idmarca = Required(int)
	tallacolor = Required(int)
	combustible = Required(int)
	serie = Required(int)
	usuario_add = Optional(str, 10 )
	usuario_mod = Required(str, 10 )
	fechaadd = Optional(datetime)
	avanzadas = Required(int)
	ventasinstock = Required(int)
	idcompatible = Required(int)
	refrigerado = Optional(int)
	antibiotico = Optional(int)
	fraccionable = Optional(int)
	filtro = Required(LongStr)
	vendido = Optional(int)
	comprado = Optional(int)
	producido = Optional(int)
	insumo = Optional(int)
	tiendavirtual = Optional(int)
	estado = Optional(int)

class Articuloproveedor(db.Entity):
	id = PrimaryKey(int, auto=True)
	codigo = Optional(str, 25 )
	proveedor = Optional(str, 20 )
	precio = Optional(Decimal, 20,7 )
	ultimacompra = Optional(datetime)

class Articulotag(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	cod_articulo = Optional(str, 25 )
	cod_tag = PrimaryKey(int, auto=True)
	descripcion = Required(str, 150 )
	usuario_mod = Required(str, 10 )
	usuario_add = Required(str, 10 )
	estado = Required(int)

class Asistencia(db.Entity):
	idasistencia = PrimaryKey(int, auto=True)
	idperiodo = Optional(str, 6 )
	idempleado = Required(int)
	dia = Required(date)
	laborable = Optional(int)
	estado = Optional(int)

class Auditor(db.Entity):
	id = PrimaryKey(int, auto=True)
	idempresa = Required(str, 6 )
	idagencia = Required(str, 3 )
	modulo = Required(str, 100 )
	proceso = Required(LongStr)
	accion = Required(str, 100 )
	fecha = Required(datetime)
	usuario = Required(str, 10 )

class Cajachcab(db.Entity):
	idempresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	idcajach = PrimaryKey(int, auto=True)
	fechora_apertura = Optional(datetime)
	fechora_cierre = Required(datetime)
	usuario = Optional(str, 10 )
	detalle = Required(str, 100 )
	monto_apertura = Optional(Decimal, 20,2 )
	monto_cierre = Optional(Decimal, 20,2 )
	estado = Optional(int)

class Cajachdet(db.Entity):
	idcajach = Optional(int)
	fecha = Required(datetime)
	concepto = Required(str, 100 )
	idmotivos = Optional(int)
	referencia = Required(str, 20 )
	tipomovimiento = Optional(int)
	monto = Required(int)
	saldo_anterior = Required(Decimal, 20,2 )
	saldo_actual = Required(Decimal, 20,2 )
	fechaadd = Optional(datetime)
	estado = Optional(int)
	item = PrimaryKey(int, auto=True)

class Cajadet(db.Entity):
	id = PrimaryKey(int, auto=True)
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	idcaja = Optional(int)
	fecha = Optional(date)
	movimiento = Optional(str, 13 )
	tipomov = Required(str, 12 )
	sumaresta = Required(int)
	concepto = Required(str, 100 )
	importe = Required(Decimal, 20,7 )
	formapago = Required(str, 2 )
	banco = Required(str, 2 )
	tarjeta = Required(str, 2 )
	documento = Required(str, 15 )
	referencia = Required(str, 50 )
	usuario = Optional(str, 10 )
	estado = Optional(int)
	fechahora = Required(datetime)
	moneda = Optional(str, 3 )

class Cajagas(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Required(str, 3 )
	codigocaja = PrimaryKey(int)
	codigo = Optional(str, 25 )
	nombre = Optional(str, 150 )
	exist_inicial = Optional(Decimal, 20,5 )
	exist_final = Required(Decimal, 20,5 )
	medida_inicial = Optional(Decimal, 20,5 )
	diferen_inical = Optional(Decimal, 20,5 )

class Cajamv(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	idcaja = Optional(int)
	tipomov = Optional(str, 3 )
	fecha = Optional(date)
	hora = Required(str, 8 )
	descripcion = Required(str, 200 )
	documento = Required(str, 20 )
	monto = Optional(Decimal, 20,2 )
	saldo = Required(Decimal, 20,2 )
	usuario = Required(str, 10 )
	item = PrimaryKey(int, auto=True)
	estado = Optional(int)

class Cajati(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	idcaja = PrimaryKey(int, auto=True)
	nodo = Required(str, 3 )
	fecha = Required(date)
	hora = Required(time)
	usuario = Required(str, 40 )
	moneda = Optional(str, 3 )
	turno = Optional(int)
	ingreso = Optional(Decimal, 20,2 )
	salida = Optional(Decimal, 20,2 )
	saldo = Optional(Decimal, 20,2 )
	apertura = Optional(Decimal, 20,2 )
	cajaybancos = Optional(int)
	fechayhora = Optional(datetime)
	caja_ing = Required(Decimal, 20,2 )
	caja_egr = Required(Decimal, 20,2 )
	caja_sal = Required(Decimal, 20,2 )
	caja_sal_ant = Required(Decimal, 20,2 )
	cambiocompra = Optional(Decimal, 20,3 )
	cambioventa = Optional(Decimal, 20,3 )
	monedalocal = Optional(Decimal, 20,3 )
	estado = Optional(int)

class Cajero(db.Entity):
	idsubcaja = PrimaryKey(int, auto=True)
	idcaja = Optional(int)
	idcajero = Optional(str, 10 )
	saldo_ante = Required(Decimal, 20,2 )
	ingresos = Required(Decimal, 20,2 )
	egresos = Required(Decimal, 20,2 )
	saldo_act = Required(Decimal, 20,2 )
	estado = Optional(int)

class Cajeromv(db.Entity):
	id = PrimaryKey(int, auto=True)
	idsubcaja = Optional(int)
	idmotivos = Optional(int)
	idconcepto = Optional(int)
	serie = Required(str, 4 )
	documento = Required(str, 8 )
	persona = Optional(str, 100 )
	glosa = Optional(str, 200 )
	entreguea = Optional(str, 50 )
	monto = Optional(Decimal, 20,2 )
	tipodoc = Required(int)
	referencia = Required(str, 50 )
	estado = Required(str, 255 )
	fechahora = Required(datetime)
	fecha = Required(date)
	idformapago = Optional(int)

class Canal(db.Entity):
	id_empresa = Required(str, 6 )
	agencia = Optional(str, 3 )
	idcanal = PrimaryKey(int, auto=True)
	canal = Required(str, 50 )
	estado = Required(int)

class Cargos(db.Entity):
	idcargo = PrimaryKey(int, auto=True)
	idarea = Optional(int)
	cargo = Required(str, 30 )
	estado = Required(int)

class Categoria(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	codigo = PrimaryKey(int, auto=True)
	nombre = Optional(str, 150 )
	iddepartamento = Optional(int)
	usuario_mod = Required(str, 10 )
	usuario_add = Required(str, 10 )
	estado = Optional(int)
	codigosub_old = Required(str, 20 )
	codigogru_old = Required(str, 20 )

class Cliempre(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	codigo = PrimaryKey(str, 20 )
	nombre = Optional(str, 100 )
	direccion = Required(str, 200 )
	referencia = Required(str, 200 )
	telefonos = Required(str, 150 )
	telefono_movil = Required(str, 150 )
	fecha = Required(date)
	credito = Required(int)
	limite = Required(Decimal, 20,7 )
	cuentas = Required(Decimal, 20,7 )
	dias = Required(int)
	precio = Required(int)
	sector = Required(str, 6 )
	email = Required(str, 150 )
	wwwcli = Required(str, 150 )
	tolerancia = Required(int)
	tipo = Required(str, 2 )
	direccobro = Required(LongStr)
	direcenvio = Required(LongStr)
	formaenvio = Required(str, 40 )
	sexo = Required(int)
	nacionalidad = Required(str, 20 )
	celular = Required(str, 40 )
	moneda = Required(str, 3 )
	tipopersona = Optional(str, 1 )
	documento = Optional(str, 3 )
	estado = Required(int)
	idzona = Optional(str, 4 )
	dni = Required(str, 11 )
	lat = Required(str, 30 )
	lon = Required(str, 30 )
	ubicamaps = Required(LongStr)
	vendedor_old = Required(str, 20 )
	codigo_old = Required(str, 10 )
	idvendedor = Required(str, 3 )
	usuarioadd = Required(str, 10 )
	usuariomod = Required(str, 10 )
	fechaadd = Required(date)
	fechamod = Required(date)
	validaruc = Required(int)
	esproveedor = Optional(int)
	tipocliente = Required(str, 2 )
	facebook = Required(str, 250 )
	twitter = Required(str, 250 )
	venta_acumulada = Optional(Decimal, 20,2 )
	punto_aumulado = Optional(int)
	punto_usado = Optional(int)
	punto_saldo = Optional(int)
	ubigeo = Optional(str, 6 )

class Colores(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	idcolor = PrimaryKey(int, auto=True)
	nombre = Required(str, 25 )
	estado = Optional(int)

class Comentarios(db.Entity):
	id = PrimaryKey(int, auto=True)
	comentario = Optional(str, 255 )
	fechahora = Optional(datetime)
	tarea = Optional(int)
	usuario = Required(int)

class Comisionescab(db.Entity):
	idcomisiones = PrimaryKey(int, auto=True)
	idempresa = Optional(str, 11 )
	idvendedores = Optional(int)
	idperiodo = Optional(str, 6 )
	vendedores = Required(str, 50 )
	ventas = Required(Decimal, 20,2 )
	cobranzas = Required(Decimal, 20,2 )

class Comisionesdet(db.Entity):
	id = PrimaryKey(int, auto=True)
	idcomision = Optional(int)
	idplanilla = Optional(int)
	titulo = Required(str, 45 )
	fecha = Required(date)
	monto = Required(Decimal, 10,2 )
	estado = Required(int)

class Compatible(db.Entity):
	idcompatible = PrimaryKey(int, auto=True)
	nombre = Optional(str, 100 )

class Compatibles(db.Entity):
	id = PrimaryKey(int, auto=True)
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	cod_articulo = Optional(str, 25 )
	cod_compatible = Optional(str, 25 )
	descripcion = Required(str, 150 )
	usuario_mod = Required(str, 10 )
	usuario_add = Required(str, 10 )
	estado = Required(int)

class Compras(db.Entity):
	id = PrimaryKey(int, auto=True)
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	tipodoc = Optional(str, 3 )
	serie = Optional(str, 4 )
	documento = Optional(str, 8 )
	codproveedor = Optional(str, 20 )
	nombrecli = Optional(str, 100 )
	contacto = Optional(str, 50 )
	placaunidad = Optional(str, 20 )
	dniruc = Optional(str, 25 )
	direccion = Optional(str, 200 )
	tipoprecio = Required(int)
	emision = Required(date)
	recepcion = Required(date)
	vence = Required(date)
	fechacrea = Required(date)
	totcosto = Required(Decimal, 20,7 )
	totcomi = Required(Decimal, 20,7 )
	totbruto = Required(Decimal, 20,7 )
	totimpuest = Required(Decimal, 20,7 )
	totneto = Required(Decimal, 20,7 )
	montoicbper = Required(Decimal, 20,2 )
	totpagos = Required(Decimal, 20,7 )
	totalfinal = Required(Decimal, 20,7 )
	totdescuen = Required(Decimal, 20,7 )
	estatusdoc = Optional(str, 1 )
	ultimopag = Required(date)
	diascred = Required(int)
	vendedor = Optional(str, 8 )
	factorcamb = Required(Decimal, 20,7 )
	multi_div = Required(int)
	factorreferencial = Required(Decimal, 20,7 )
	fechanul = Required(date)
	uanulador = Optional(str, 10 )
	uemisor = Optional(str, 10 )
	estacion = Optional(str, 3 )
	aplicadoa = Optional(str, 13 )
	referencia = Optional(str, 20 )
	refmanual = Optional(str, 20 )
	vuelto = Required(Decimal, 20,7 )
	uemisorant = Optional(str, 10 )
	caja = Required(int)
	usuario = Optional(str, 10 )
	registro = Optional(str, 20 )
	area = Optional(str, 20 )
	tifacturacion = Required(int)
	condicion = Required(int)
	tipotarjeta = Optional(str, 1 )
	txt = Required(int)
	xml = Required(int)
	cdr = Required(int)
	pdf = Required(int)
	ftp = Required(int)
	email = Required(int)
	receta = Required(int)
	hash = Optional(str, 255 )
	paciente = Optional(str, 150 )
	colegiatura = Optional(str, 20 )
	medico = Optional(str, 200 )
	rptasunat = Optional(str, 200 )
	tipodocsunat = Optional(str, 2 )
	idzona = Optional(str, 4 )
	porpagar = Required(Decimal, 20,7 )
	motivo = Optional(str, 100 )
	impreso = Required(int)
	generado = Required(int)
	auditoria = Optional(str, 8 )
	idcajero = Required(int)
	icbper = Required(Decimal, 20,2 )
	almacen = Optional(str, 2 )

class Concepto(db.Entity):
	idconcepto = PrimaryKey(int, auto=True)
	idmotivo = Optional(int)
	concepto = Required(str, 100 )
	estado = Required(int)
	acumulable = Required(int)
	sumaresta = Required(int)

class Condicion(db.Entity):
	id_empresa = Required(str, 6 )
	agencia = Required(str, 3 )
	id_condicion = PrimaryKey(int)
	titulo_condicion = Required(str, 20 )
	dias_condicion = Required(int)
	credito = Required(int)
	estado = Required(int)

class Conductor(db.Entity):
	idconductor = PrimaryKey(int, auto=True)
	idtipodoc = Optional(str, 1 )
	numerodoc = Optional(str, 20 )
	nombrerazon = Optional(str, 200 )

class Consolidadocab(db.Entity):
	id = PrimaryKey(int, auto=True)
	consolidaid = Optional(str, 20 )
	fecha = Required(date)
	idvendedor = Optional(int)
	montotal = Required(Decimal, 20,2 )
	transporte = Optional(str, 20 )
	estado = Required(int)

class Consolidadodet(db.Entity):
	id = PrimaryKey(int, auto=True)
	consolidaid = Optional(str, 10 )
	ndocumento = Required(str, 20 )
	nmonto = Required(Decimal, 20,2 )
	dfecha = Required(date)
	vfecha = Required(date)

class Correlativos(db.Entity):
	id = PrimaryKey(int, auto=True)
	id_empresa = Required(str, 6 )
	agencia = Optional(str, 3 )
	tabla = Required(str, 50 )
	correlativo = Required(str, 13 )
	contador = Required(int)
	tipodoc = Required(str, 2 )
	uso = Required(str, 2 )
	serie = Required(str, 4 )
	operaciones = Required(str, 2 )

class Departamento(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	codigo = PrimaryKey(int, auto=True)
	nombre = Required(str, 150 )
	usuario_mod = Required(str, 10 )
	usuario_add = Required(str, 10 )
	estado = Optional(int)
	codigo_old = Required(str, 20 )

class Dias(db.Entity):
	id_empresa = Required(str, 6 )
	agencia = Required(str, 3 )
	iddia = PrimaryKey(int)
	nombredia = Required(str, 15 )
	iniciales = Required(str, 1 )

class Direcciones(db.Entity):
	id = PrimaryKey(int, auto=True)
	codigo = Optional(str, 20 )
	direccion = Optional(str, 250 )
	observacion = Required(str, 250 )

class Documentos(db.Entity):
	iddocumento = PrimaryKey(int, auto=True)
	documento = Required(str, 50 )

class Empleados(db.Entity):
	idempleado = PrimaryKey(int, auto=True)
	idempresa = Optional(str, 11 )
	id_vendedor = Optional(int)
	idcliente = Optional(str, 20 )
	idcargo = Optional(int)
	nombres = Required(str, 100 )
	direccion = Required(str, 100 )
	telefono = Required(str, 12 )
	dni = Required(str, 8 )
	email = Required(str, 200 )
	sueldobase = Required(Decimal, 10,2 )
	fech_ingreso = Required(date)
	estado = Required(int)

class Empresas(db.Entity):
	id_empresa = PrimaryKey(str, 6 )
	nombre = Required(str, 100 )
	direccion = Required(str, 200 )
	telefono = Required(str, 30 )
	ruc = Required(str, 11 )
	email = Required(str, 100 )
	web = Required(str, 100 )
	moneda = Required(str, 3 )
	fe = Required(int)
	fsunat = Required(int)
	ruta_entel = Required(LongStr)
	ruta_envio = Required(LongStr)
	ruta_data = Required(LongStr)
	ruta_rpta = Required(LongStr)
	ruta_repo = Required(LongStr)
	ruta_tempo = Required(LongStr)
	enviar_ftp = Required(int)
	generar_pdf = Required(int)
	automatico = Required(int)
	apartirdehoy = Required(int)
	verificaenvio = Required(int)
	verificacdr = Optional(int)
	fnubefact = Required(int)
	imagenbienvenida = Required(LongStr)
	clientepordefecto = Required(str, 6 )
	limiteitem = Required(int)
	gpsubicacion = Required(LongStr)
	esrestobar = Required(int)
	eszapateria = Required(int)
	esgrifo = Required(int)
	tienelicencia = Required(int)
	fechavence = Required(date)
	ctacte = Required(str, 100 )
	saldopago = Required(Decimal, 20,2 )
	licenciavencida = Required(int)
	productosunicos = Required(int)
	multiagencias = Required(int)
	compacto = Required(int)
	versql = Optional(int)
	unidad_espanol = Optional(int)
	temporales = Optional(int)
	analizador = Optional(int)
	estado = Required(str, 1 )
	imagendefondo = Required(LongStr)
	tokendniruc = Required(LongStr)
	monedero = Optional(int)
	monedero_soles = Optional(Decimal, 20,2 )
	equivalemonedero = Optional(int)
	pagomonedero = Optional(int)
	porcenmonedero = Optional(int)
	clavesecreta = Optional(str, 6 )
	unidadminima = Optional(int)
	rutalogo = Required(LongStr)

class Escalas(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	item = PrimaryKey(int, auto=True)
	codigo = Optional(str, 25 )
	descripcion = Required(str, 200 )
	costo = Required(Decimal, 20,6 )
	cantidad = Required(Decimal, 20,2 )
	cantidadmax = Required(Decimal, 20,2 )
	precio_venta = Required(Decimal, 20,6 )
	idcanal = Required(int)
	condicion = Required(int)
	estado = Required(int)

class Existencia(db.Entity):
	id = PrimaryKey(int, auto=True)
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	codigo = Optional(str, 25 )
	almacen = Optional(str, 2 )
	existencia = Optional(Decimal, 20,7 )
	ubicacion = Required(str, 20 )
	pid_ubica = Required(str, 12 )
	usuario = Required(str, 10 )
	documento = Required(str, 8 )
	tipodoc = Required(str, 3 )
	fechacrea = Optional(date)

class Formapago(db.Entity):
	idforma = PrimaryKey(int, auto=True)
	descripcion = Required(str, 50 )

class Guiaremcab(db.Entity):
	id = PrimaryKey(int, auto=True)
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	tipodoc = Optional(str, 3 )
	serie = Optional(str, 4 )
	documento = Optional(str, 8 )
	codcliente = Optional(str, 20 )
	nombrecli = Required(str, 100 )
	dniruc = Required(str, 25 )
	idmotivotras = Optional(str, 2 )
	idtipotransporte = Optional(str, 2 )
	pesototal = Required(Decimal, 20,5 )
	numerobultos = Required(int)
	direcdestino = Optional(str, 200 )
	direcpartida = Optional(str, 200 )
	ubigeo_origen = Optional(str, 10 )
	ubigeo_destino = Optional(str, 10 )
	emision = Required(date)
	recepcion = Required(date)
	vence = Required(date)
	fechacrea = Required(date)
	idtransportista = Optional(int)
	idvehiculo = Optional(int)
	idconductor = Optional(int)
	contacto = Required(str, 50 )
	totcosto = Required(Decimal, 20,7 )
	placaunidad = Required(str, 20 )
	totcomi = Required(Decimal, 20,7 )
	totbruto = Required(Decimal, 20,7 )
	totimpuest = Required(Decimal, 20,7 )
	totneto = Required(Decimal, 20,7 )
	totpagos = Required(Decimal, 20,7 )
	totalfinal = Required(Decimal, 20,7 )
	totdescuen = Required(Decimal, 20,7 )
	tipoprecio = Required(int)
	estatusdoc = Required(str, 1 )
	ultimopag = Required(date)
	diascred = Required(int)
	vendedor = Required(str, 8 )
	factorcamb = Required(Decimal, 20,7 )
	multi_div = Required(int)
	factorreferencial = Required(Decimal, 20,7 )
	fechanul = Required(date)
	uanulador = Required(str, 30 )
	uemisor = Required(str, 30 )
	estacion = Required(str, 3 )
	aplicadoa = Required(str, 13 )
	referencia = Required(str, 20 )
	refmanual = Required(str, 20 )
	vuelto = Required(Decimal, 20,7 )
	uemisorant = Required(str, 30 )
	caja = Required(str, 10 )
	usuario = Required(str, 100 )
	registro = Required(str, 20 )
	area = Required(str, 50 )
	tifacturacion = Optional(int)
	condicion = Optional(int)
	tipotarjeta = Required(str, 1 )
	txt = Optional(int)
	xml = Optional(int)
	cdr = Optional(int)
	pdf = Optional(int)
	ftp = Optional(int)
	hash = Required(str, 100 )
	email = Optional(int)
	receta = Optional(int)
	paciente = Required(str, 150 )
	colegiatura = Required(str, 20 )
	medico = Required(str, 200 )
	rptasunat = Required(str, 250 )
	tipodocsunat = Required(str, 2 )
	idzona = Optional(int)
	vendedorold = Required(str, 20 )
	porpagar = Required(Decimal, 20,2 )
	motivo = Required(str, 100 )
	impreso = Required(int)
	generador = Required(int)
	auditoria = Required(str, 8 )
	docauditoria = Required(str, 13 )
	generomovimientoalmacen = Optional(int)
	imprimiomovimientoalmacen = Optional(int)
	totaldevolucion = Required(Decimal, 20,2 )
	montoicbper = Required(Decimal, 20,2 )
	generado = Optional(int)
	icbper = Required(Decimal, 20,2 )
	observacion = Required(LongStr)
	refserie = Required(str, 4 )
	refdocumento = Required(str, 8 )

class Guiaremdet(db.Entity):
	item = PrimaryKey(int, auto=True)
	id = Optional(int)
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	tipodoc = Optional(str, 3 )
	serie = Optional(str, 4 )
	documento = Optional(str, 8 )
	codigo = Optional(str, 25 )
	nombre = Required(str, 150 )
	unidad = Required(str, 4 )
	cantidad = Optional(Decimal, 20,7 )
	tipoprecio = Optional(int)
	costounit = Optional(Decimal, 20,7 )
	preciounit = Optional(Decimal, 20,7 )
	igv = Optional(Decimal, 20,7 )
	precioventa = Optional(Decimal, 20,7 )
	valorventa = Optional(Decimal, 20,7 )
	cntdevuelt = Optional(Decimal, 20,7 )
	unidevuelt = Optional(Decimal, 20,7 )
	cntentrega = Optional(Decimal, 20,7 )
	almacen = Optional(str, 3 )
	proveedor = Required(str, 20 )
	vendedor = Required(str, 8 )
	emisor = Required(str, 10 )
	estacion = Required(str, 3 )
	placa = Required(str, 20 )
	surtidor = Required(str, 10 )
	tipodetalle = Required(int)
	flete = Required(Decimal, 20,6 )
	margen = Required(Decimal, 20,6 )
	contiene = Required(Decimal, 20,2 )
	listaprecio = Required(str, 8 )
	lote = Required(str, 1 )
	receta = Required(str, 1 )
	descto = Required(Decimal, 20,2 )
	afectacion = Required(str, 2 )
	unidad_minima = Required(str, 4 )
	docauditoria = Required(str, 13 )

class Habitacion(db.Entity):
	idhabitacion = PrimaryKey(int, auto=True)
	numero = Optional(int)
	piso = Optional(int)
	descripcion = Required(str, 250 )
	caracteristicas = Required(str, 250 )
	preciodiario = Optional(Decimal, 20,2 )
	tipohabitacion = Optional(int)
	idreserva = Optional(int)
	estado = Optional(int)

class Imagenesps(db.Entity):
	id = PrimaryKey(int, auto=True)
	ruc = Optional(str, 255 )
	codigo = Optional(str, 255 )
	urlfoto = Optional(str, 255 )
	thumbnail = Optional(str, 255 )

class Iniciocab(db.Entity):
	id_empresa = Required(str, 6 )
	agencia = Required(str, 3 )
	dia = PrimaryKey(date)
	responsable = Required(str, 10 )
	estado = Required(str, 1 )

class Iniciodetalle(db.Entity):
	id = PrimaryKey(int, auto=True)
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	dia = Optional(date)
	codigo = Optional(str, 20 )
	stockini = Required(Decimal, 20,5 )
	stockfin = Required(Decimal, 20,5 )
	compragalones = Required(Decimal, 20,5 )
	sumaec = Required(Decimal, 20,5 )
	ventagalones = Required(Decimal, 20,5 )
	reglaini = Required(Decimal, 20,5 )
	galonesini = Required(Decimal, 20,5 )
	reglafin = Required(Decimal, 20,5 )
	galonesfin = Required(Decimal, 20,5 )
	diferencia = Required(Decimal, 20,5 )
	diferenciatotal = Required(Decimal, 20,5 )
	temperatura = Required(int)
	estado = Required(str, 1 )

class Inventarioperiodo(db.Entity):
	periodo = Optional(str, 6 )
	origen = Required(str, 4 )
	documento = Required(str, 15 )
	decripcion = Required(str, 100 )
	fecha = Required(date)
	hora = Required(datetime)
	codigo = Required(str, 20 )
	ingreso_can = Required(Decimal, 20,2 )
	egreso_can = Required(Decimal, 20,2 )
	saldo_can = Required(Decimal, 20,2 )
	ingreso_cos = Required(Decimal, 20,6 )
	egreso_cos = Required(Decimal, 20,6 )
	saldo_cos = Required(Decimal, 20,6 )
	exist_cant = Required(Decimal, 20,2 )
	cantidad = Required(Decimal, 20,2 )
	costo = Required(Decimal, 20,6 )
	costoprom = Required(Decimal, 20,6 )
	sumaresta = Required(int)
	detalle = Required(str, 250 )
	unidad = Required(str, 5 )
	item = PrimaryKey(int, auto=True)

class Inventarioresumenperiodo(db.Entity):
	id = PrimaryKey(int, auto=True)
	id_empresa = Optional(str, 6 )
	periodo = Optional(str, 6 )
	codigo = Required(str, 20 )
	nombre = Required(str, 250 )
	idtipoexistencia = Optional(str, 2 )
	idalmacen = Optional(str, 2 )
	idunidad = Optional(str, 3 )
	metodo = Optional(str, 50 )
	inicial = Optional(Decimal, 20,2 )
	saldo = Optional(Decimal, 20,2 )
	costoprom = Required(Decimal, 20,6 )
	totcosto = Required(Decimal, 20,6 )

class Kardex(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	documento = Optional(str, 20 )
	codigo = Optional(str, 25 )
	hora = Required(datetime)
	grupo = Optional(str, 6 )
	origen = Optional(str, 3 )
	concepto = Required(str, 100 )
	cantidad = Optional(Decimal, 20,7 )
	estacion = Optional(str, 3 )
	almacen = Optional(str, 2 )
	sumaresta = Optional(int)
	emisor = Required(str, 20 )
	fecha = Optional(date)
	aux1 = Optional(Decimal, 20,7 )
	aux2 = Optional(Decimal, 20,7 )
	aux3 = Optional(Decimal, 20,7 )
	tipo_resta = Optional(int)
	pid = Optional(str, 12 )
	idvalidacion = Required(str, 20 )
	costo = Optional(Decimal, 20,7 )
	costoprom = Optional(Decimal, 20,7 )
	exist_ant = Optional(Decimal, 20,7 )
	exist_act = Required(Decimal, 20,7 )
	costoprompbl = Optional(Decimal, 20,7 )
	costoex_adic = Optional(Decimal, 20,7 )
	incrcosprom = Optional(Decimal, 20,7 )
	item = PrimaryKey(int, auto=True)

class Listaprecios(db.Entity):
	item = PrimaryKey(int, auto=True)
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	id_articulo = Optional(str, 25 )
	descripcion = Required(str, 20 )
	precio_venta = Required(Decimal, 20,7 )
	unid_vta = Required(str, 4 )
	contiene = Required(Decimal, 20,2 )
	unid_contiene = Required(str, 4 )
	precio_costo = Required(Decimal, 20,7 )
	observacion = Required(str, 255 )
	estado = Required(int)
	datead = Required(datetime)
	usuarioad = Required(str, 10 )
	dateed = Required(datetime)
	usuarioed = Required(str, 10 )
	datede = Required(datetime)
	usuariode = Required(str, 10 )
	porutilidad = Required(Decimal, 20,2 )
	utilidadmin = Required(Decimal, 20,2 )
	descuento = Required(Decimal, 20,2 )
	valor_venta = Required(Decimal, 20,7 )
	costo_proveedor = Required(Decimal, 20,7 )
	presentacion = Required(str, 25 )

class Lotes(db.Entity):
	id = PrimaryKey(int, auto=True)
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	cod_articulo = Optional(str, 25 )
	lote = Required(str, 25 )
	fechafabri = Required(date)
	fechacadu = Required(date)
	exisinicial = Required(Decimal, 20,2 )
	exisactual = Required(Decimal, 20,2 )
	usuario_mod = Required(str, 10 )
	usuario_add = Required(str, 10 )
	estado = Required(int)

class Marca(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	codigo = PrimaryKey(int, auto=True)
	nombre = Optional(str, 100 )
	usuarioadd = Optional(str, 10 )
	fecha_add = Required(datetime)
	usuariomod = Required(str, 10 )
	fecha_mod = Required(datetime)
	usuariodelete = Required(str, 10 )
	fecha_delete = Required(datetime)
	estado = Optional(int)

class Monedas(db.Entity):
	codigo = PrimaryKey(str, 3 )
	iso_4217 = Required(int)
	moneda = Required(str, 50 )
	simbolo = Required(str, 10 )
	fraccion = Required(str, 50 )
	estado = Required(int)

class Motivos(db.Entity):
	idmotivos = PrimaryKey(int)
	motivo = Optional(str, 100 )
	tabla = Required(str, 20 )
	estado = Optional(int)

class Motivos_caja(db.Entity):
	idmotivos = PrimaryKey(int, auto=True)
	descripcion = Optional(str, 100 )

class Movimientodet(db.Entity):
	idmovimiento = Optional(int)
	serie = Optional(str, 4 )
	documento = Optional(str, 8 )
	idarticulo = Optional(int)
	cantidad = Optional(Decimal, 20,2 )
	fechafab = Required(date)
	fechavence = Required(date)
	lote = Optional(str, 50 )
	item = PrimaryKey(int, auto=True)
	nlote = Optional(str, 1 )
	estado = Optional(int)

class Movimientoscab(db.Entity):
	idempresa = Required(str, 6 )
	agencia = Required(str, 4 )
	idmovimiento = PrimaryKey(int, auto=True)
	idtipomovalmacen = Required(int)
	serie = Required(str, 4 )
	documento = Required(str, 8 )
	fecha = Required(date)
	docreferencia = Required(str, 20 )
	almacenorigen = Required(int)
	almacendestino = Required(int)
	observacion = Required(str, 255 )
	usuario = Required(str, 10 )
	estado = Required(int)

class Movimientosdet(db.Entity):
	item = PrimaryKey(int, auto=True)
	idmovimiento = Optional(int)
	serie = Optional(str, 4 )
	documento = Optional(str, 8 )
	idarticulo = Optional(str, 25 )
	cantidad = Optional(Decimal, 20,2 )
	fechafab = Required(date)
	fechavence = Required(date)
	lote = Required(str, 50 )
	nlote = Required(str, 1 )
	almacen = Optional(str, 2 )
	estado = Optional(int)

class Nbf_anulado(db.Entity):
	id = Optional(int)
	item = PrimaryKey(int, auto=True)
	id_empresa = Required(str, 6 )
	agencia = Required(str, 3 )
	tipodoc = Required(str, 3 )
	serie = Required(str, 4 )
	numero = Required(str, 8 )
	enlace = Required(LongStr)
	sunat_ticket_numero = Required(LongStr)
	aceptada_por_sunat = Required(int)
	sunat_descripcion = Required(LongStr)
	sunat_note = Required(LongStr)
	sunat_responsecode = Required(str, 1 )
	sunat_soap_error = Required(LongStr)
	enlace_del_pdf = Required(LongStr)
	enlace_del_xml = Required(LongStr)
	enlace_del_cdr = Required(LongStr)
	estado = Required(int)

class Nbf_respuesta(db.Entity):
	id = PrimaryKey(int, auto=True)
	item = Required(int)
	id_empresa = Optional(str, 6 )
	agencia = Required(str, 3 )
	tipodoc = Required(str, 3 )
	serie = Required(str, 4 )
	numero = Required(str, 8 )
	enlace = Required(LongStr)
	enlace_del_pdf = Required(LongStr)
	enlace_del_xml = Required(LongStr)
	enlace_del_cdr = Required(LongStr)
	aceptada_por_sunat = Optional(int)
	sunat_descripcion = Required(LongStr)
	sunat_note = Required(LongStr)
	sunat_responsecode = Required(str, 1 )
	sunat_soap_error = Required(LongStr)
	cadena_codigo_qr = Required(LongStr)
	codigo_hash = Required(LongStr)

class Nbf_respuesta_guia(db.Entity):
	id = PrimaryKey(int, auto=True)
	item = Optional(int)
	id_empresa = Optional(str, 6 )
	agencia = Required(str, 3 )
	tipodoc = Required(str, 3 )
	serie = Required(str, 4 )
	numero = Required(str, 8 )
	enlace = Required(LongStr)
	enlace_del_pdf = Required(LongStr)
	enlace_del_xml = Required(LongStr)
	enlace_del_cdr = Required(LongStr)
	aceptada_por_sunat = Optional(int)
	sunat_descripcion = Required(LongStr)
	sunat_note = Required(LongStr)
	sunat_responsecode = Required(str, 1 )
	sunat_soap_error = Required(LongStr)
	cadena_codigo_qr = Required(LongStr)
	codigo_hash = Required(LongStr)

class Opercom(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	tipodoc = Optional(str, 3 )
	serie = Optional(str, 4 )
	documento = Optional(str, 8 )
	codcliente = Optional(str, 20 )
	nombrecli = Required(str, 100 )
	contacto = Required(str, 50 )
	placaunidad = Required(str, 20 )
	dniruc = Required(str, 25 )
	direccion = Required(str, 200 )
	tipoprecio = Required(int)
	emision = Required(date)
	recepcion = Required(date)
	vence = Required(date)
	fechacrea = Required(date)
	totcosto = Required(Decimal, 20,7 )
	totcomi = Required(Decimal, 20,7 )
	totbruto = Required(Decimal, 20,7 )
	totimpuest = Required(Decimal, 20,7 )
	totneto = Required(Decimal, 20,7 )
	montoicbper = Required(Decimal, 20,2 )
	totpagos = Required(Decimal, 20,7 )
	totalfinal = Required(Decimal, 20,7 )
	totdescuen = Required(Decimal, 20,7 )
	idflete = Required(int)
	totalflete = Required(Decimal, 20,7 )
	fleteusado = Required(Decimal, 20,6 )
	ultimopag = Required(date)
	diascred = Required(int)
	vendedor = Required(str, 8 )
	factorcamb = Required(Decimal, 20,7 )
	multi_div = Required(int)
	factorreferencial = Required(Decimal, 20,7 )
	fechanul = Required(date)
	uanulador = Required(str, 30 )
	uemisor = Required(str, 30 )
	estacion = Required(str, 3 )
	aplicadoa = Required(str, 13 )
	referencia = Required(str, 20 )
	refmanual = Required(str, 20 )
	vuelto = Required(Decimal, 20,7 )
	uemisorant = Required(str, 30 )
	caja = Required(str, 10 )
	usuario = Required(str, 100 )
	registro = Required(str, 20 )
	area = Required(str, 50 )
	tifacturacion = Required(int)
	condicion = Required(int)
	tipotarjeta = Required(str, 1 )
	txt = Required(int)
	xml = Required(int)
	cdr = Required(int)
	pdf = Required(int)
	ftp = Required(int)
	hash = Required(str, 100 )
	email = Required(int)
	receta = Required(int)
	paciente = Required(str, 150 )
	colegiatura = Required(str, 20 )
	medico = Required(str, 200 )
	rptasunat = Required(str, 200 )
	tipodocsunat = Required(str, 2 )
	idzona = Required(str, 5 )
	vendedorold = Required(str, 20 )
	porpagar = Required(Decimal, 20,2 )
	motivo = Required(str, 100 )
	impreso = Required(int)
	generado = Optional(int)
	auditoria = Required(str, 8 )
	idcajero = Required(str, 10 )
	icbper = Required(Decimal, 20,2 )
	almacen = Required(str, 2 )
	moneda = Optional(str, 3 )
	tipocambio = Optional(Decimal, 20,6 )
	estatusdoc = Required(str, 1 )
	id = PrimaryKey(int, auto=True)

class Opergast(db.Entity):
	id = PrimaryKey(int, auto=True)
	idempresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	serie = Optional(str, 4 )
	documento = Optional(str, 10 )
	idproveedor = Required(str, 11 )
	fecha = Optional(date)
	totbruto = Required(Decimal, 20,2 )
	totabono = Required(Decimal, 20,2 )
	totsaldo = Required(Decimal, 20,2 )
	referencia = Required(str, 100 )
	estado = Required(int)
	uemisor = Required(str, 10 )
	idcaja = Required(int)
	tipo = Required(int)
	uelimina = Required(str, 10 )
	fechaelimina = Required(datetime)
	aplicadoa = Required(str, 20 )

class Opermv(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	tipodoc = Optional(str, 3 )
	serie = Optional(str, 4 )
	documento = Optional(str, 8 )
	codigo = Optional(str, 25 )
	nombre = Required(str, 250 )
	unidad = Optional(str, 3 )
	cantidad = Optional(Decimal, 20,7 )
	tipoprecio = Optional(int)
	costounit = Optional(Decimal, 20,7 )
	preciounit = Optional(Decimal, 20,7 )
	moneda = Optional(str, 3 )
	factorcambio = Optional(Decimal, 20,3 )
	igv = Optional(Decimal, 20,7 )
	icbper = Required(Decimal, 20,7 )
	montoicbper = Required(Decimal, 20,7 )
	precioventa = Optional(Decimal, 20,7 )
	valorventa = Optional(Decimal, 20,7 )
	cntdevuelt = Optional(Decimal, 20,7 )
	unidevuelt = Optional(Decimal, 20,7 )
	cntentrega = Optional(Decimal, 20,7 )
	almacen = Optional(str, 3 )
	proveedor = Required(str, 20 )
	vendedor = Required(str, 8 )
	emisor = Required(str, 10 )
	estacion = Required(str, 3 )
	placa = Required(str, 20 )
	surtidor = Required(str, 10 )
	tipodetalle = Required(int)
	flete = Required(Decimal, 20,6 )
	margen = Required(Decimal, 20,6 )
	contiene = Required(Decimal, 20,2 )
	listaprecio = Required(str, 8 )
	lote = Required(str, 1 )
	receta = Required(str, 1 )
	descto = Required(Decimal, 20,2 )
	afectacion = Required(str, 2 )
	unidad_minima = Required(str, 4 )
	factor = Required(Decimal, 20,7 )
	numero_lote = Required(str, 20 )
	auditoria = Required(str, 13 )
	item = PrimaryKey(int, auto=True)
	docauditoria = Required(str, 13 )

class Operpag(db.Entity):
	idempresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	serie = Optional(str, 4 )
	documento = Optional(str, 10 )
	fecha = Optional(date)
	totbruto = Required(Decimal, 20,2 )
	totabono = Required(Decimal, 20,2 )
	totsaldo = Required(Decimal, 20,2 )
	referencia = Required(str, 100 )
	estado = Required(int)
	uemisor = Required(str, 10 )
	idcaja = Required(int)
	tipo = Required(int)
	uelimina = Required(str, 10 )
	fechaelimina = Required(datetime)
	idcobranza = PrimaryKey(int, auto=True)
	idvendedor = Required(str, 8 )
	idcajero = Required(str, 10 )
	condicion = Optional(int)

class Operti(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	tipodoc = Optional(str, 3 )
	serie = Optional(str, 4 )
	documento = Optional(str, 8 )
	codcliente = Optional(str, 20 )
	nombrecli = Required(str, 100 )
	contacto = Required(str, 50 )
	placaunidad = Required(str, 20 )
	dniruc = Required(str, 25 )
	direccion = Required(str, 200 )
	tipoprecio = Required(int)
	emision = Required(date)
	recepcion = Required(date)
	vence = Required(date)
	fechacrea = Required(date)
	totcosto = Required(Decimal, 20,7 )
	totcomi = Required(Decimal, 20,7 )
	totbruto = Required(Decimal, 20,7 )
	totimpuest = Required(Decimal, 20,7 )
	totneto = Required(Decimal, 20,7 )
	montoicbper = Required(Decimal, 20,2 )
	totpagos = Required(Decimal, 20,7 )
	totalfinal = Required(Decimal, 20,7 )
	totdescuen = Required(Decimal, 20,7 )
	estatusdoc = Required(str, 1 )
	ultimopag = Required(date)
	diascred = Required(int)
	vendedor = Required(str, 8 )
	factorcamb = Required(Decimal, 20,3 )
	multi_div = Required(int)
	factorreferencial = Required(Decimal, 20,7 )
	fechanul = Required(date)
	uanulador = Required(str, 30 )
	uemisor = Required(str, 30 )
	estacion = Required(str, 3 )
	aplicadoa = Required(str, 13 )
	referencia = Required(str, 20 )
	refmanual = Required(str, 20 )
	vuelto = Required(Decimal, 20,7 )
	uemisorant = Required(str, 30 )
	caja = Required(str, 10 )
	usuario = Required(str, 100 )
	registro = Required(str, 20 )
	area = Required(str, 50 )
	tifacturacion = Required(int)
	condicion = Required(int)
	tipotarjeta = Required(str, 1 )
	txt = Required(int)
	xml = Required(int)
	cdr = Required(int)
	pdf = Required(int)
	ftp = Required(int)
	hash = Required(str, 100 )
	email = Required(int)
	receta = Required(int)
	paciente = Required(str, 150 )
	colegiatura = Required(str, 20 )
	medico = Required(str, 200 )
	rptasunat = Required(str, 200 )
	tipodocsunat = Required(str, 2 )
	idzona = Required(str, 5 )
	vendedorold = Required(str, 20 )
	porpagar = Required(Decimal, 20,2 )
	motivo = Required(str, 100 )
	impreso = Required(int)
	generado = Optional(int)
	auditoria = Required(str, 8 )
	idcajero = Required(str, 10 )
	icbper = Required(Decimal, 20,2 )
	almacen = Required(str, 2 )
	moneda = Optional(str, 3 )
	tipocambio = Optional(Decimal, 20,3 )
	terminado = Optional(int)
	coferta_prof = Required(str, 100 )
	cplazo_prof = Required(str, 100 )
	ccondicion_prof = Required(str, 100 )
	cnumcuenta_prof = Required(str, 100 )
	id = PrimaryKey(int, auto=True)
	totaldevolucion = Optional(Decimal, 20,2 )
	generoguia = Optional(int)
	guiaremision = Required(str, 13 )
	observacion = Required(LongStr)

class Pedidos_cab(db.Entity):
	id_pedido = PrimaryKey(str, 25 )
	agencia = Optional(str, 3 )
	serie = Optional(str, 4 )
	documento = Optional(str, 8 )
	horafecha = Optional(datetime)
	nombre = Optional(str, 100 )
	apellidos = Optional(str, 100 )
	telefono = Optional(str, 12 )
	email = Optional(str, 200 )
	dire_entrega = Optional(str, 200 )
	nro_lote = Optional(str, 5 )
	dpto_int = Optional(str, 5 )
	emite_factura = Optional(int)
	rucdni = Optional(str, 11 )
	razon_social = Optional(str, 250 )
	direccion = Optional(str, 250 )
	cupon_dscto = Optional(str, 20 )
	subtotal = Optional(Decimal, 20,2 )
	descuento = Optional(Decimal, 20,2 )
	total = Optional(Decimal, 20,2 )
	comentarios = Optional(LongStr)
	sunat = Optional(int)
	estado = Optional(int)

class Pedidos_det(db.Entity):
	id = PrimaryKey(int, auto=True)
	id_pedido = Optional(str, 25 )
	codigo = Optional(str, 25 )
	nombre = Optional(str, 120 )
	precio_base = Optional(Decimal, 20,6 )
	descuento = Optional(Decimal, 20,6 )
	costoprom = Optional(Decimal, 20,6 )
	cantidad = Optional(Decimal, 20,2 )
	subtotal = Optional(Decimal, 20,6 )
	urlfoto = Optional(LongStr)
	estado = Optional(int)

class Periodo(db.Entity):
	idperiodo = PrimaryKey(str, 6 )
	fecha_inicio = Required(date)
	fecha_fin = Required(date)
	estado = Required(int)

class Personal(db.Entity):
	id = PrimaryKey(int, auto=True)
	usuario = Optional(str, 10 )
	nombre = Optional(str, 100 )
	apellidos = Optional(str, 100 )
	dni = Optional(str, 8 )
	direccion = Optional(str, 200 )
	telefono = Optional(str, 12 )

class Planilla_cab(db.Entity):
	idempresa = Optional(str, 6 )
	idplanilla = PrimaryKey(int, auto=True)
	idperiodo = Optional(str, 6 )
	idempleado = Optional(int)
	sueldo_basico = Required(Decimal, 10,2 )
	comisionvta = Required(Decimal, 10,2 )
	comisionph = Required(Decimal, 10,2 )
	dsctos = Required(Decimal, 10,2 )
	totcobranza = Required(Decimal, 20,2 )
	a3dias = Required(Decimal, 20,2 )
	a7dias = Required(Decimal, 20,2 )
	a15dias = Required(Decimal, 20,2 )
	a45dias = Required(Decimal, 20,2 )
	mas45dias = Required(Decimal, 20,2 )
	total_cobrar = Required(Decimal, 10,2 )
	coma3dias = Required(Decimal, 20,2 )
	coma7dias = Required(Decimal, 20,2 )
	coma15dias = Required(Decimal, 20,2 )
	coma45 = Required(Decimal, 20,2 )
	comamasdias = Required(Decimal, 20,2 )
	total_comision = Required(Decimal, 20,2 )
	saldomes = Required(Decimal, 20,2 )
	estado = Required(int)

class Planilla_det(db.Entity):
	idplanilla = Optional(int)
	idcuota = Required(int)
	idmotivo = Required(int)
	fecha = Required(date)
	descripcion = Required(str, 100 )
	doc_refe = Required(str, 45 )
	monto = Required(Decimal, 10,2 )
	estado = Required(str, 45 )
	item = PrimaryKey(int, auto=True)

class Premisoprecio(db.Entity):
	id = PrimaryKey(int, auto=True)
	idusuario = Optional(str, 10 )
	precio01 = Optional(int)
	precio02 = Optional(int)
	precio03 = Optional(int)
	precio04 = Optional(int)
	precio05 = Optional(int)
	precio06 = Optional(int)
	precio07 = Optional(int)
	precio08 = Optional(int)
	precio09 = Optional(int)

class Prestamocab(db.Entity):
	idprestamo = PrimaryKey(int, auto=True)
	idempleado = Required(int)
	fecha = Required(date)
	monto = Required(Decimal, 20,2 )
	abono = Required(Decimal, 20,2 )
	saldo = Required(Decimal, 20,2 )
	aprobadopor = Required(str, 50 )
	fechaultimopago = Required(date)
	estado = Required(int)

class Prestamodet(db.Entity):
	idprestamo = Optional(int)
	idcuota = PrimaryKey(int)
	cuota = Required(Decimal, 20,2 )
	abono = Required(Decimal, 20,2 )
	saldo = Required(Decimal, 20,2 )
	estado = Required(int)

class Primercosteo(db.Entity):
	id = PrimaryKey(int, auto=True)
	codigo = Required(str, 25 )
	descripcion = Required(str, 250 )
	costo = Required(Decimal, 20,6 )

class Procedencia(db.Entity):
	id = PrimaryKey(int, auto=True)
	nombre = Optional(str, 100 )
	ubigeo = Optional(str, 6 )

class Prodtallacolor(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	id = PrimaryKey(int, auto=True)
	codigo = Optional(str, 25 )
	idtalla = Required(int)
	idcolor = Required(int)
	descripcion = Required(str, 100 )
	existencia = Required(Decimal, 20,2 )
	estado = Optional(int)

class Productofoto(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	idfoto = PrimaryKey(int, auto=True)
	codigo = Required(str, 25 )
	foto = Required(LongStr)
	nombrefoto = Required(LongStr)
	estado = Required(int)

class Profesion(db.Entity):
	id = PrimaryKey(int, auto=True)
	nombre = Optional(str, 50 )

class Promocab(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	idpromo = PrimaryKey(int, auto=True)
	fechaini = Required(date)
	fechafin = Required(date)
	idarticulo = Required(str, 25 )
	listaprecio = Required(str, 20 )
	unid_vta = Required(str, 4 )
	cantidad = Required(Decimal, 20,2 )
	usuarioad = Required(str, 10 )
	usuariode = Required(str, 10 )
	usuariomo = Required(str, 10 )
	fechacre = Required(datetime)
	fechaeli = Required(datetime)
	fechamod = Required(datetime)
	estado = Required(int)

class Promodet(db.Entity):
	idempresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	idpromo = Optional(int)
	idbonificacion = PrimaryKey(int, auto=True)
	idarticulo = Optional(str, 25 )
	listaprecio = Required(str, 8 )
	codigoventa = Required(str, 25 )
	cantidadventa = Required(Decimal, 20,2 )
	cantidad = Required(Decimal, 20,2 )
	estado = Required(int)

class Proveedores(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	codigo = PrimaryKey(str, 20 )
	nombre = Optional(str, 150 )
	nrorif = Required(str, 20 )
	nronit = Required(str, 20 )
	cedula = Required(str, 20 )
	perscont = Required(str, 40 )
	direccion = Required(str, 200 )
	telefonos = Required(str, 150 )
	celular = Required(str, 150 )
	nrofax = Required(str, 150 )
	dias = Optional(int)
	fecha = Optional(date)
	notas = Required(str, 40 )
	sector = Required(str, 6 )
	banco = Required(str, 3 )
	cuenta = Required(str, 25 )
	email = Required(str, 150 )
	wwwsite = Required(str, 150 )
	tipo = Required(str, 3 )
	cuentacont = Required(str, 45 )
	clase = Optional(int)
	exento = Optional(int)
	flotante = Optional(int)
	pagaex = Optional(int)
	moneda = Required(str, 3 )
	campo1 = Required(str, 40 )
	campo2 = Required(str, 40 )
	campo3 = Required(str, 40 )
	campo4 = Required(str, 40 )
	campo5 = Required(str, 40 )
	codban_beneficiario = Required(str, 3 )
	codban_intermediario = Required(str, 3 )
	nombre_beneficiario = Required(str, 60 )
	cuenta_beneficiario = Required(str, 60 )
	tipo_cuenta_beneficiario = Required(str, 25 )
	codigo_swift_beneficiario = Required(str, 25 )
	codigo_iban_beneficiario = Required(str, 25 )
	nota_cuenta_beneficiario = Optional(str, 60 )
	esagretesp = Optional(int)
	idtercero = Required(str, 15 )
	historia = Required(LongStr)
	estado = Optional(int)
	codigo_old = Required(str, 20 )

class Provincia(db.Entity):
	id = PrimaryKey(str, 4 )
	nombre = Optional(str, 100 )
	region = Optional(str, 2 )

class Region(db.Entity):
	id = PrimaryKey(str, 2 )
	nombre = Optional(str, 100 )

class Reservacab(db.Entity):
	id = PrimaryKey(int, auto=True)
	idempresa = Optional(str, 6 )
	idagencia = Optional(str, 3 )
	idhabitacion = Optional(int)
	idcliente = Optional(str, 20 )
	usuario = Optional(str, 10 )
	tiporeserva = Optional(int)
	fechareserva = Required(date)
	fechaingreso = Required(date)
	fechasalida = Required(date)
	profesion = Required(int)
	procedencia = Required(int)
	costo = Required(Decimal, 20,2 )
	observacion = Required(LongStr)
	serie = Required(str, 4 )
	documento = Required(str, 8 )
	estado = Optional(int)

class Reservadet(db.Entity):
	item = PrimaryKey(int, auto=True)
	id = Optional(int)
	codigo = Required(str, 25 )
	descripcion = Required(str, 250 )
	cantidad = Optional(Decimal, 20,2 )
	preciounit = Optional(Decimal, 20,2 )
	observacion = Required(LongStr)
	estado = Optional(int)

class Rutas(db.Entity):
	id_empresa = Required(str, 6 )
	agencia = Required(str, 3 )
	idcanal = Required(int)
	idruta = PrimaryKey(int, auto=True)
	idvendedor = Optional(int)
	ruta = Required(str, 50 )
	estado = Required(int)

class Surtidor(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	codigo = PrimaryKey(str, 5 )
	id_tanque = Required(str, 2 )
	descrip_tanque = Required(str, 38 )
	estado = Optional(int)
	rojo = Required(int)
	verde = Required(int)
	azul = Required(int)

class Tabla01(db.Entity):
	codigo = PrimaryKey(str, 3 )
	descripcion = Required(str, 200 )

class Tabla02(db.Entity):
	codigo = PrimaryKey(str, 1 )
	descripcion = Required(str, 100 )

class Tabla05(db.Entity):
	codigo = PrimaryKey(str, 2 )
	descripcion = Required(str, 200 )

class Tabla06(db.Entity):
	codigo = PrimaryKey(str, 3 )
	descripcion = Required(str, 200 )

class Tabla10(db.Entity):
	codigo = PrimaryKey(str, 3 )
	descripcion = Required(str, 200 )
	estado = Required(str, 1 )
	afecta = Required(str, 10 )

class Tabla12(db.Entity):
	codigo = PrimaryKey(str, 2 )
	descripcion = Required(str, 255 )

class Tabla20(db.Entity):
	idmotivo = PrimaryKey(str, 2 )
	descripcion = Optional(str, 100 )

class Tags(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	codigo = PrimaryKey(int, auto=True)
	nombre = Required(str, 150 )
	usuario_mod = Required(str, 10 )
	usuario_add = Required(str, 10 )
	estado = Required(int)

class Tallas(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	idtalla = PrimaryKey(int, auto=True)
	nombre = Required(str, 20 )
	estado = Optional(int)

class Tareas(db.Entity):
	id = PrimaryKey(int, auto=True)
	tarea = Optional(str, 255 )
	descripcion = Optional(str, 255 )
	fechaini = Required(date)
	fechafin = Required(date)
	usuario = Optional(int)
	estado = Optional(int)

class Tempserie(db.Entity):
	id_empresa = Required(str, 6 )
	id = PrimaryKey(int, auto=True)
	agencia = Required(str, 3 )
	inicio = Required(int)
	fin = Required(int)
	fecha = Required(date)
	serie = Required(str, 4 )
	documento = Required(str, 8 )

class Tipohabitacion(db.Entity):
	codigo = PrimaryKey(int, auto=True)
	nombre = Required(str, 50 )

class Tipomovalmacen(db.Entity):
	idtipomovalmacen = PrimaryKey(int, auto=True)
	nombre = Required(str, 20 )
	estado = Required(int)

class Tiporeserva(db.Entity):
	id = PrimaryKey(int, auto=True)
	nombre = Optional(str, 50 )

class Tipotransporte(db.Entity):
	idtipo = PrimaryKey(str, 2 )
	descripcion = Optional(str, 100 )

class Tmpsaldos(db.Entity):
	id = PrimaryKey(int, auto=True)
	codigo = Required(str, 20 )
	ingreso = Required(Decimal, 20,2 )
	salida = Required(Decimal, 20,2 )
	saldo = Required(Decimal, 20,2 )

class Tmptablacompras(db.Entity):
	idcompras = Optional(str, 10 )
	item = PrimaryKey(int, auto=True)
	codigo = Required(str, 20 )
	descripcion = Required(str, 250 )
	unidad_med = Required(str, 3 )
	costounit = Required(Decimal, 20,6 )
	costotal = Required(Decimal, 20,6 )
	margen = Required(Decimal, 20,2 )
	flete = Required(Decimal, 20,6 )
	precio = Required(Decimal, 20,6 )
	preciounit = Required(Decimal, 20,6 )
	cantidad = Required(Decimal, 20,2 )
	descto = Required(Decimal, 20,2 )
	igv = Required(Decimal, 20,6 )
	afectacion = Required(str, 2 )
	montoprecioventa = Required(Decimal, 20,2 )
	montovalorventa = Required(Decimal, 20,2 )
	dispensador = Required(str, 3 )
	agencia = Optional(str, 3 )

class Tmptablaventas(db.Entity):
	idventas = Optional(str, 10 )
	item = PrimaryKey(int, auto=True)
	codigo = Required(str, 25 )
	descripcion = Required(str, 255 )
	lote = Required(str, 1 )
	receta = Required(str, 1 )
	unidad_med = Required(str, 3 )
	costo = Required(Decimal, 20,6 )
	precio = Required(Decimal, 20,6 )
	preciounit = Required(Decimal, 20,6 )
	cantidad = Required(Decimal, 20,6 )
	descto = Required(Decimal, 20,2 )
	igv = Required(Decimal, 20,2 )
	afectacion = Required(str, 2 )
	montoprecioventa = Required(Decimal, 20,2 )
	montovalorventa = Required(Decimal, 20,2 )
	dispensador = Required(str, 3 )
	tipodetalle = Required(str, 1 )
	unidad_min = Required(str, 3 )
	contiene = Required(Decimal, 20,2 )
	listaprecio = Required(str, 8 )
	tipoitem = Required(str, 1 )
	servicio = Optional(int)
	compuesto = Optional(int)
	icbper = Required(Decimal, 20,2 )
	montoicbper = Required(Decimal, 20,7 )
	numero_lote = Required(str, 20 )
	agencia = Optional(str, 3 )

class Transporte(db.Entity):
	idempresa = Optional(str, 6 )
	idagencia = Optional(str, 3 )
	idcliente = Required(str, 11 )
	placa = PrimaryKey(str, 20 )
	responsable = Required(str, 200 )
	observacion = Required(str, 100 )
	estado = Optional(str, 1 )

class Transportista(db.Entity):
	idtransportista = PrimaryKey(int, auto=True)
	idtipodoc = Optional(str, 1 )
	numerodoc = Optional(str, 20 )
	nombrerazon = Optional(str, 200 )

class Turnos(db.Entity):
	id = PrimaryKey(int)
	nombre = Optional(str, 20 )
	estado = Optional(int)

class Ubigeo(db.Entity):
	ubigeo = PrimaryKey(str, 6 )
	nombre = Optional(str, 200 )
	provincia = Optional(str, 4 )

class Unidades(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	unidad_id = PrimaryKey(str, 5 )
	unidad = Optional(str, 10 )
	nombreunidad = Optional(str, 30 )
	unabre_fe = Required(str, 3 )
	cantafecto = Required(Decimal, 20,3 )
	cantminima = Required(Decimal, 20,3 )
	condecimales = Optional(int)
	estado = Optional(int)

class Usuarios(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	usuarios = PrimaryKey(str, 10 )
	clave = Required(str, 10 )
	tipouser = Required(str, 1 )
	turno = Required(str, 1 )
	estado = Required(str, 1 )
	nomape = Required(str, 200 )
	dni = Required(str, 15 )
	email = Required(str, 100 )
	idvendedor = Required(str, 3 )
	invenvalorizado = Optional(int)
	token = Required(str, 40 )
	formato = Optional(str, 4 )

class Vehiculo(db.Entity):
	idvehiculo = PrimaryKey(int, auto=True)
	placa = Optional(str, 10 )

class Vendedor(db.Entity):
	id_empresa = Optional(str, 6 )
	agencia = Optional(str, 3 )
	idvendedor = PrimaryKey(int, auto=True)
	nombrevendedor = Optional(str, 50 )
	apevendedor = Optional(str, 50 )
	dni = Required(str, 8 )
	direccion = Required(str, 200 )
	telefono = Required(str, 12 )
	idruta = Required(str, 3 )
	estado = Optional(int)
	idvendedorold = Required(str, 20 )
	telefono_empre = Required(str, 12 )
	email_personal = Required(LongStr)
	email_trabajo = Required(LongStr)
	profesion = Required(LongStr)
	fecha_ingreso = Required(date)

class Zona(db.Entity):
	zona_id = PrimaryKey(str, 4 )
	zona_nombre = Optional(str, 50 )
	zona_abre = Required(str, 5 )
	vendedor_id = Required(int)
	estado = Optional(int)

class Zonas(db.Entity):
	id_empresa = Required(str, 6 )
	agencia = Required(str, 3 )
	idruta = Required(int)
	iddia = Required(int)
	idzona = PrimaryKey(str, 4 )
	zona = Required(str, 50 )
	estado = Required(int)
